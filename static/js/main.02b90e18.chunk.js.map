{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setsearchTerm","useEffect","getMovies","api","fetch","then","res","json","data","results","handleOnSubmit","e","preventDefault","width","onSubmit","type","placeholder","value","onChange","target","onClick","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA6BeA,EAfD,SAAC,GAAD,IAXQC,EAWLC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,aAAjC,OACV,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKJ,EAfC,oCAe0BA,EAAa,iBAAkBK,IAAKN,IACzE,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eAhBLL,EAgB2BI,EAfzCJ,GAAQ,EACD,QACAA,GAAQ,EACR,SAGA,QASH,SAAuDI,OAE3D,sBAAKC,UAAU,aAAf,UACI,0CACA,4BAAIF,WC+CDK,MA5Df,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,EAZiB,yHAahB,IAEH,IAAMA,EAAU,SAACC,GACfC,MAAMD,GAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAEtCV,EAAUU,EAAKC,aAKbC,EAAiB,SAACC,GACtBA,EAAEC,iBAEEb,IACFG,EAzBa,2GAyBQH,GAErBC,EAAe,MAQnB,OACE,sBAAKR,UAAU,MAAf,UACE,mCACE,uBAAOA,UAAU,OAAjB,SACE,gCACE,+BACE,6BACE,qBAAKE,IAAI,WAAWmB,MAAM,KAAK,eAAa,IAAIpB,IAAI,eAEtD,qDAIN,qBAAKD,UAAU,aAAf,SACE,uBAAMsB,SAAUJ,EAAhB,UACI,uBAAOlB,UAAU,aAAauB,KAAK,SAASC,YAAY,wBAAwBC,MAAOlB,EAAYmB,SAnBxF,SAACP,GACtBX,EAAcW,EAAEQ,OAAOF,UAmBb,wBAAQzB,UAAU,SAAU4B,QAASV,EAArC,4BAKR,qBAAKlB,UAAU,kBAAf,SACGK,EAAOwB,OAAQ,GAAKxB,EAAOyB,KAAI,SAACC,GAAD,OAC9B,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCpDbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.02b90e18.chunk.js","sourcesContent":["import React from 'react';\r\nconst images_api = \"https://images.tmdb.org/t/p/w1280\";\r\n\r\nconst setvoteColor = (vote) => {\r\n    if (vote >= 8) {\r\n        return 'green'\r\n    } else if (vote >= 6) {\r\n        return \"yellow\"\r\n    }\r\n    else {\r\n        return \"red\"\r\n    }\r\n}\r\n\r\nconst Movie = ({ title, poster_path, overview, vote_average }) =>(\r\n    <div className=\"movie\">\r\n        <img src={poster_path ?(images_api + poster_path):'null_image.png'} alt={title}></img>\r\n        <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            <span className={`tag ${setvoteColor(vote_average)}`}>{vote_average}</span>\r\n        </div>\r\n        <div className=\"movie-over\">\r\n            <h2>Overview</h2>\r\n            <p>{overview}</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nexport default Movie;","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Movie from \"./Movie\";\n\nconst featured_Api = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=cf4f5e199cc2db91661ec3af16ec280a&page=1\";\n\nconst search_Api = \"https://api.themoviedb.org/3/search/movie?api_key=cf4f5e199cc2db91661ec3af16ec280a&language=en-US&query=\";\n\n//const gener_list=\"https://api.themoviedb.org/3/genre/movie/list?api_key=cf4f5e199cc2db91661ec3af16ec280a&language=en-US\"\n\nfunction App() {\n  \n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setsearchTerm] = useState('');\n  \n  useEffect(() => {\n    getMovies(featured_Api);\n  }, []);\n\n  const getMovies=(api)=> {\n    fetch(api).then(res => res.json()).then(data => {\n      //console.log(data);\n      setMovies(data.results);\n    });\n    \n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchTerm) {\n      getMovies(search_Api+searchTerm);\n\n      setsearchTerm ('');\n    }\n  };\n\n  const handleOnChange = (e) => {\n    setsearchTerm(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <table className=\"head\">\n          <tbody>\n            <tr>\n              <td>\n                <img alt=\"app_icon\" width=\"90\" padding-left=\"0\" src=\"icon.png\"></img>\n              </td>\n              <td>Movie Search</td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"search-sec\">\n          <form onSubmit={handleOnSubmit} >\n              <input className=\"search-bar\" type=\"search\" placeholder=\"Search for a movie...\" value={searchTerm} onChange={handleOnChange}></input>\n              <button className=\"button\"  onClick={handleOnSubmit}>Search</button>\n          </form>\n          \n        </div>\n      </header>\n      <div className=\"movie-container\">\n        {movies.length >0 && movies.map((movie) =>\n          <Movie key={movie.id} {...movie} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}